// <auto-generated />
using System;
using DefineX.Services.Discount.DataAccess.Concrete.EntityFrameworkCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DefineX.Services.Discount.Api.Migrations
{
    [DbContext(typeof(DefineXContext))]
    [Migration("20210916134707_initialdb")]
    partial class initialdb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("DefineX.Services.Discount.Entities.Concrete.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("KeyValues")
                        .HasColumnType("text");

                    b.Property<string>("NewValues")
                        .HasColumnType("text");

                    b.Property<string>("OldValues")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .HasColumnType("text");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("DefineX.Services.Discount.Entities.Concrete.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Coupons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 9, 16, 16, 47, 6, 957, DateTimeKind.Local).AddTicks(8810),
                            IsDeleted = false,
                            Name = "DiscountPerPiece"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 9, 16, 16, 47, 6, 957, DateTimeKind.Local).AddTicks(8948),
                            IsDeleted = false,
                            Name = "DiscountBuOneSecondFree"
                        });
                });

            modelBuilder.Entity("DefineX.Services.Discount.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("Price")
                        .HasPrecision(38, 2)
                        .HasColumnType("numeric(38,2)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 9, 16, 16, 47, 6, 955, DateTimeKind.Local).AddTicks(7838),
                            Description = "Laptop",
                            IsDeleted = false,
                            Name = "Asus",
                            Price = 500m
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 9, 16, 16, 47, 6, 957, DateTimeKind.Local).AddTicks(7701),
                            Description = "Business Laptop",
                            IsDeleted = false,
                            Name = "Lenovo",
                            Price = 800m
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 9, 16, 16, 47, 6, 957, DateTimeKind.Local).AddTicks(7810),
                            Description = "Gaming Laptop",
                            IsDeleted = false,
                            Name = "Monster",
                            Price = 1250m
                        });
                });

            modelBuilder.Entity("DefineX.Services.Discount.Entities.Concrete.ProductCoupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CouponId")
                        .HasColumnType("integer");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCoupons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CouponId = 1,
                            CreatedDate = new DateTime(2021, 9, 16, 16, 47, 6, 958, DateTimeKind.Local).AddTicks(246),
                            IsDeleted = false,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            CouponId = 2,
                            CreatedDate = new DateTime(2021, 9, 16, 16, 47, 6, 958, DateTimeKind.Local).AddTicks(434),
                            IsDeleted = false,
                            ProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            CouponId = 1,
                            CreatedDate = new DateTime(2021, 9, 16, 16, 47, 6, 958, DateTimeKind.Local).AddTicks(457),
                            IsDeleted = false,
                            ProductId = 3
                        },
                        new
                        {
                            Id = 4,
                            CouponId = 2,
                            CreatedDate = new DateTime(2021, 9, 16, 16, 47, 6, 958, DateTimeKind.Local).AddTicks(472),
                            IsDeleted = false,
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("DefineX.Services.Discount.Entities.Concrete.ProductCoupon", b =>
                {
                    b.HasOne("DefineX.Services.Discount.Entities.Concrete.Coupon", "Coupon")
                        .WithMany("ProductCoupons")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DefineX.Services.Discount.Entities.Concrete.Product", "Product")
                        .WithMany("ProductCoupons")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DefineX.Services.Discount.Entities.Concrete.Coupon", b =>
                {
                    b.Navigation("ProductCoupons");
                });

            modelBuilder.Entity("DefineX.Services.Discount.Entities.Concrete.Product", b =>
                {
                    b.Navigation("ProductCoupons");
                });
#pragma warning restore 612, 618
        }
    }
}
